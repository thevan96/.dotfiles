snippet base "Base template for go"
package main

import "fmt"

func main() {
}
endsnippet

snippet fpn "fmt.Println()"
fmt.Println($1)
endsnippet

snippet fps "fmt.Printf()"
fmt.Printf($1)
endsnippet

snippet measure "Time"
start := time.Now()
fmt.Println(time.Since(start))
endsnippet

snippet maxInt "Max integer"
func maxInt(a, b int) int {
	if a > b {
		return a
	}

	return b
}
endsnippet

snippet cp "Competive programing"
package main

import (
	"bufio"
	"os"
)

var (
	reader = bufio.NewReader(os.Stdin)
	writer = bufio.NewWriter(os.Stdout)
)

type Number interface {
	int | int64 | float32 | float64
}

func max[T Number](a, b T)  T {
	if a > b {
		return a
	}

	return b
}

func min[T Number](a, b T)  T {
	if a < b {
		return a
	}

	return b
}

func ceil(a, b int) int {
	if a % b == 0 {
		return a / b
	}

	return a / b + 1
}

func boolToInt(arg bool) int {
	if arg {
		return 1
	}

	return 0
}

func gcd(a, b int) int {
	if b == 0 {
		return a
	}

	for b != 0 {
		a, b = b, a%b
	}

	return a
}

func main() {
	writer.Flush()
}
endsnippet
